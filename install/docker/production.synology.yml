# 
# This is a JPSONIC boot configuration sample in Synology DS220+ or in Linux with UPnP.
# You can easily start Jpsonic by changing the volume, port and so on.
#
# usage: 
#   docker-compose -f production.synology.yml up -d
#
# @since v112.2.0
#

version: '3.9'
services:
  app:
    image: 'jpsonic/jpsonic:latest'
    container_name: 'jpsonic'
    network_mode: 'host'
    hostname: 'SynologyNAS'
    pid: host

    # This image is automatically updated by watchtower.
    # See docker-compose.watchtower.yml
    labels:
     - "com.centurylinklabs.watchtower.enable=true"

    volumes:
     # <host>:<internal>
     # Please rewrite "the path of host" appropriately.
     - '/volume1/docker/jpsonic-data:/jpsonic/data'
     - '/volume1/Music:/jpsonic/music'
     - '/volume1/Podcasts:/jpsonic/podcasts'
     - '/volume1/Playlists:/jpsonic/playlists'

     # If you want to add a large number of music folders, please add more volumes
     # - '/volume1/Music2:/jpsonic/music2'
     # - '/volume1/Music3:/jpsonic/music3'

    deploy:
      resources:
        limits:

          # Jpsonic container is limited to 1Gb so that it can run on DS220+'s standard memory.
          # Add 512m to the number assigned to -Xmx. See 'JAVA_OPTS'.
          memory: 1g

    environment:

     # Set the jpsonic and upnp ports.
     # Containers share the host networking name space,
     # so be careful not to overlap with existing ports.
     JPSONIC_PORT: '4040'
     UPNP_PORT: '4041'

     # Set the appropriate UID/GID.
     USER_ID: '0'
     GROUP_ID: '0'

     # Please specify the appropriate timezone
     TIME_ZONE: 'Asia/Tokyo'

     # Jpsonic context path.
     CONTEXT_PATH: '/'

     # Whether to log the logo at startup. [OFF|CONSOLE|LOG]
     BANNER_MODE: 'OFF'

     # Granularity of output logs. [ERROR|WARN|INFO|DEBUG|TRACE]
     LOG_LEVEL: 'WARN'

     # Whether to scan at startup. False is recommended for Docker.
     SCAN_ON_BOOT: 'false'

     # If false, use the logical font of JRE (JDK) for Cover Art.
     # If true, preferentially use embedded fonts.
     EMBEDDED_FONT: 'false'

     # You can override the MIME of DSD according to your device.
     MIME_DSF: 'audio/x-dsd'
     MIME_DFF: 'audio/x-dsd'

     # Specify the appropriate Java options.
     # If you are using a pure DLNA player (not UPnP) and have problems, remove XX:MaxGCPauseMillis.
     # Note, however, that scanning will be slightly slower.

     # The following settings are standard settings. 100K songs or less.
     # Specify 1g for Docker memory.
     JAVA_OPTS: '-Xms512m -Xmx512m -XX:MaxGCPauseMillis=500'

     # 70K-10K songs (Maybe just a little faster). Specify 1.25g for Docker memory.
     # JAVA_OPTS: '-Xms768m -Xmx768m -XX:MaxGCPauseMillis=500'

     # 200K songs or less. Specify 1.5g for Docker memory.
     # JAVA_OPTS: '-Xms1024m -Xmx1024m -XX:MaxGCPauseMillis=500'

     # 300K songs or less. Specify 1.75g for Docker memory.
     # JAVA_OPTS: '-Xms1280m -Xmx1280m -XX:MaxGCPauseMillis=500'

     # 400K songs or less. Specify 2g for Docker memory.
     # JAVA_OPTS: '-Xms1536m -Xmx1536m -XX:MaxGCPauseMillis=500'

     #　Option example when using JMX. The "ea" tag image is required to use JMX.
     #　For VisualVM, you need to specify the port in File-Add JMX Connection.
     #　e.g. localhost:3333
     #
     # JAVA_OPTS: >
     #   -Xms512m
     #   -Xmx512m
     #   -XX:MaxGCPauseMillis=500
     #   -Dcom.sun.management.jmxremote
     #   -Dcom.sun.management.jmxremote.port=3333
     #   -Dcom.sun.management.jmxremote.rmi.port=3333
     #   -Dcom.sun.management.jmxremote.local.only=false
     #   -Dcom.sun.management.jmxremote.ssl=false
     #   -Dcom.sun.management.jmxremote.authenticate=false
     #   -Djava.rmi.server.hostname=localhost

     # If you want to perform long-term profiling such as scan performance adjustment,
     # it is a good idea to output GC Log.
     # See Universal GC Log Analyzer (https://gceasy.io/)
     #
     # JAVA_OPTS: >
     #   -Xms512m
     #   -Xmx512m
     #   -XX:MaxGCPauseMillis=500
     #   -Xlog:gc*:file=/jpsonic/data/jpsonic_gc.log:time,level,tags:filecount=0'

    # Usually no need to change.
    # Unlike other Sonic servers, Jpsonic has a graceful shutdown implemented.
    # After receiving the 'kill 15' of Docker message, it will phase out, and finnaly shut down the database.
    # In case of emergency shutdown during critical processing,
    # there may be a wait time of up to 30 seconds to protect data.
     TINI_SUBREAPER: 'true'
    stop_grace_period: '30s'
